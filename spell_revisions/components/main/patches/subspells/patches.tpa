//Description patches.
DEFINE_DIMORPHIC_FUNCTION encode_description_arguments INT_VAR
    description = 0
STR_VAR
    arg1 = ""
    arg2 = ""
    arg3 = ""
RET text BEGIN
    OUTER_SPRINT text (AT description)
    OUTER_TEXT_SPRINT text EVAL "%text%"
END


//Spell patches.
DEFINE_PATCH_FUNCTION patch_duration STR_VAR arg1 = "" arg2 = "*" arg3 = "*" BEGIN
    //Sanitize arguments.
    PATCH_IF NOT (IS_AN_INT arg1) BEGIN
        PATCH_FAIL "patch_duration: arg1 '%arg1%' is not an integer."
    END

    PATCH_IF NOT (arg1 > 0) BEGIN
        PATCH_FAIL "patch_duration: duration '%arg1%' must be strictly positive."
    END
 
    LPF ALTER_SPELL_EFFECT INT_VAR
        duration_high = 6 * arg1
    END
END

DEFINE_PATCH_FUNCTION poisoning STR_VAR arg1 = "" arg2 = "" arg3 = "*" BEGIN
    //Sanitize arguments.
    PATCH_IF NOT (IS_AN_INT arg2) BEGIN
        PATCH_FAIL "poisoning: amount '%arg2%' is not an integer."
    END

    PATCH_IF NOT (arg2 > 0) BEGIN
        PATCH_FAIL "poisoning: amount '%amount%' must be strictly positive."
    END

    //Patch amount.
    LPF ALTER_SPELL_EFFECT INT_VAR
        match_opcode = 25                   //Poison.
        parameter1 = arg2
    END

    //Patch duration.
    LPF patch_duration STR_VAR arg1 = "%arg1%" END
END

DEFINE_PATCH_FUNCTION splash_damage STR_VAR arg1 = "" arg2 = "" arg3 = "*" BEGIN
    //Sanitize arguments.
    PATCH_IF NOT (IS_AN_INT arg1) BEGIN
        PATCH_FAIL "splash_damage: duration '%arg1%' is not an integer."
    END

    PATCH_IF NOT (IS_AN_INT arg2) BEGIN
        PATCH_FAIL "splash_damage: amount '%arg2%' is not an integer."
    END

    PATCH_IF NOT (arg2 > 0) BEGIN
        PATCH_FAIL "splash_damage: amount '%amount%' must be strictly positive."
    END

    //Number conversions.
    duration = arg1
    amount = arg2

    //Patch amount.
    LPF ALTER_EFFECT INT_VAR
        match_opcode = 12                   //Damage.
        parameter1 = amount
    END

    //Patch duration.
    LPF patch_duration STR_VAR arg1 = "%duration%" END

    //Add remaining delayed damage opcodes.
    PATCH_IF (duration >= 2) BEGIN
        FOR (i = 1; i < duration; ++i) BEGIN
            LPF CLONE_EFFECT INT_VAR
                match_opcode = 12           //Damage.
                match_timing = 4            //Delayed.
                //(duration - i) to get ordered opcodes.
                duration = 3 + (duration - i) * 6
            STR_VAR
                insert = "below"
            END
        END
    END
END

DEFINE_PATCH_FUNCTION level_drain STR_VAR arg1 = "" arg2 = "" arg3 = "*" BEGIN
    //Sanitize arguments.
    PATCH_IF NOT (IS_AN_INT arg2) BEGIN
        PATCH_FAIL "level_drain: amount '%arg2%' is not an integer."
    END

    PATCH_IF NOT (arg2 > 0) BEGIN
        PATCH_FAIL "level_drain: amount '%arg2%' must be strictly positive."
    END
   
    //Number conversions.
    LPF ALTER_SPELL_EFFECT INT_VAR
        match_opcode = 216                  //Level drain.
        parameter1 = arg2
    END

    //Patch duration.
    LPF patch_duration STR_VAR arg1 = "%arg1%" END
END

DEFINE_PATCH_FUNCTION drain_strength STR_VAR arg1 = "" arg2 = "" arg3 = "*" BEGIN
    //Sanitize arguments.
    PATCH_IF NOT (IS_AN_INT arg2) BEGIN
        PATCH_FAIL "drain_strength: amount '%arg2%' is not an integer."
    END

    PATCH_IF (arg2 <= 0) BEGIN
        PATCH_FAIL "drain_strength: amount to drain '%amount%' must be strictly positive."
    END
   
    //Number conversions.
    amount = arg2
    LPF ALTER_SPELL_EFFECT INT_VAR
        match_opcode = 44                   //Strength penalty.
        parameter1 = 0 - amount
    END

    //Patch duration.
    LPF patch_duration STR_VAR arg1 = "%arg1%" END
END
